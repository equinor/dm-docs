"use strict";(self.webpackChunkdevelopment_framework_docs=self.webpackChunkdevelopment_framework_docs||[]).push([[6177],{379:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=s(74848),t=s(28453);const o={title:"Data sources and packages",sidebar_position:4},r=void 0,c={id:"concepts/data-sources",title:"Data sources and packages",description:"In data modeling storage service (DMSS), documents (blueprints or entities)",source:"@site/docs/concepts/data-sources.md",sourceDirName:"concepts",slug:"/concepts/data-sources",permalink:"/dm-docs/docs/concepts/data-sources",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Data sources and packages",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Plugins",permalink:"/dm-docs/docs/concepts/plugins"},next:{title:"Meta",permalink:"/dm-docs/docs/concepts/meta"}},d={},i=[{value:"Data source",id:"data-source",level:2},{value:"Packages",id:"packages",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["In ",(0,a.jsx)(n.a,{href:"https://github.com/equinor/data-modelling-storage-service",children:"data modeling storage service"})," (DMSS), documents (blueprints or entities)\nare stored in a ",(0,a.jsx)(n.em,{children:"virtual"})," hierarchy of data sources and packages:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Data source","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Root package","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"document"}),"\n",(0,a.jsxs)(n.li,{children:["sub package","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["document","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This hierarchy does not actually exist in the database, but there exists internal logic in DMSS to create this tree structure."}),"\n",(0,a.jsx)(n.h2,{id:"data-source",children:"Data source"}),"\n",(0,a.jsxs)(n.p,{children:["In the topmost layer we have data sources. A data source is an abstraction layer over one or more ",(0,a.jsx)(n.em,{children:"storage repositories"})," (can be a Mongo database, Azure file storage, etc)."]}),"\n",(0,a.jsx)(n.p,{children:"To define a data source, we create a json file for it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "MyDataSource",\n  "repositories": {\n    "db": {\n      "type": "mongo-db",\n      "host": "db",\n      "port": 27017,\n      "username": "***",\n      "password": "***",\n      "tls": true,\n      "database": "MyDatabase",\n      "collection": "MyDatabaseCollection"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Internally in DMSS, a lookup table is created for each data source. The lookup table looks something like (when using Mongo DB as a storage repository):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "_id": "system",\n  "name": "system",\n  "repositories": {\n    "a": {\n      "type": "mongo-db",\n      "data_types": null,\n      "host": "db",\n      "port": 27017,\n      "username": "***",\n      "password": "***",\n      "database": "DMSS-core",\n      "collection": "DMSS-core",\n      "account_url": null,\n      "container": null,\n      "tls": false\n    }\n  },\n  "documentLookUp": {\n    "40388758-ee55-46be-bfa6-d3527bc2d12d": {\n      "lookup_id": "40388758-ee55-46be-bfa6-d3527bc2d12d",\n      "repository": "a",\n      "database_id": "40388758-ee55-46be-bfa6-d3527bc2d12d",\n      "acl": {\n        "owner": "dmss-admin",\n        "roles": {\n          "dmss-admin": "WRITE"\n        },\n        "users": {},\n        "others": "READ"\n      },\n      "storage_affinity": "default",\n      "meta": {\n        "created": "2023-08-31 09:06:31.315147"\n      }\n    },\n    "9dfe10a9-b744-46a0-9a47-43a027368b5f": {\n      "lookup_id": "9dfe10a9-b744-46a0-9a47-43a027368b5f",\n      "repository": "a",\n      "database_id": "9dfe10a9-b744-46a0-9a47-43a027368b5f",\n      "acl": {\n        "owner": "dmss-admin",\n        "roles": {\n          "dmss-admin": "WRITE"\n        },\n        "users": {},\n        "others": "READ"\n      },\n      "storage_affinity": "default",\n      "meta": {\n        "created": "2023-08-31 09:06:31.326077"\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note: as of August 2023, the ",(0,a.jsx)(n.code,{children:"lookup_id"})," and ",(0,a.jsx)(n.code,{children:"database_id"})," are equal, but they don't have to be. DMSS uses the ",(0,a.jsx)(n.code,{children:"lookup_id"}),"\nto find the correct document. Internally in the Mongo database, a different id (",(0,a.jsx)(n.code,{children:"database_id"}),") is used."]}),"\n",(0,a.jsx)(n.p,{children:"Access control for documents is also handled on the data source level.  In the lookup table the acl attribute determines\nwho should have what access to each document."}),"\n",(0,a.jsx)(n.h2,{id:"packages",children:"Packages"}),"\n",(0,a.jsx)(n.p,{children:"A package is very similar to a folder on your computer's local filesystem. It contains one or more documents (entities, blueprints, sub packages, etc)."}),"\n",(0,a.jsxs)(n.p,{children:["A package is either a ",(0,a.jsx)(n.code,{children:"root package"}),", if the package is directly under a data source, or a ",(0,a.jsx)(n.code,{children:"non-root packages"})," if the package exists further down in the hierarchy."]}),"\n",(0,a.jsx)(n.p,{children:"Example of a package entity:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "type": "dmss://system/SIMOS/Package",\n    "name": "apps",\n    "isRoot": false,\n    "content": [\n        {\n            "address": "$2305507e-4dbf-40dd-a1c6-4ee24907a534",\n            "type": "dmss://system/SIMOS/Reference",\n            "referenceType": "storage"\n        },\n        {\n            "address": "$c5b8ceff-2775-413c-9546-541606b6cb42",\n            "type": "dmss://system/SIMOS/Reference",\n            "referenceType": "storage"\n        }\n    ]\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"The content list of a package entity is always storage uncontained."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var a=s(96540);const t={},o=a.createContext(t);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);