"use strict";(self.webpackChunkdevelopment_framework_docs=self.webpackChunkdevelopment_framework_docs||[]).push([[4085],{30878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=n(74848),r=n(28453);const o={},a="ListPluginConfig.json",s={id:"libraries/plugins/list/ListConfig",title:"ListPluginConfig.json",description:"",source:"@site/docs/libraries/plugins/list/ListConfig.md",sourceDirName:"libraries/plugins/list",slug:"/libraries/plugins/list/ListConfig",permalink:"/dm-docs/docs/libraries/plugins/list/ListConfig",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CreateConfig.json",permalink:"/dm-docs/docs/libraries/plugins/job_create/JobCreateConfig"},next:{title:"MediaViewerConfig.json",permalink:"/dm-docs/docs/libraries/plugins/media_viewer/MediaViewerConfig"}},l={},p=[];function u(e){const t={code:"code",h1:"h1",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"listpluginconfigjson",children:"ListPluginConfig.json"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "name": "ListPluginConfig",\n  "type": "CORE:Blueprint",\n  "attributes": [\n    {\n      "name": "type",\n      "type": "dmss://system/SIMOS/BlueprintAttribute",\n      "attributeType": "string"\n    },\n    {\n      "name": "expanded",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Initial expand state for items in list",\n      "attributeType": "boolean",\n      "default": false,\n      "optional": true\n    },\n    {\n      "name": "compact",\n      "type": "CORE:BlueprintAttribute",\n      "description": "If table should be more compact, with less padding and smaller icons. ",\n      "attributeType": "boolean",\n      "default": false,\n      "optional": true\n    },\n    {\n      "name": "saveExpanded",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Use save button to save expanded items.",\n      "attributeType": "boolean",\n      "default": false,\n      "optional": true\n    },\n    {\n      "name": "selectFromScope",\n      "type": "CORE:BlueprintAttribute",\n      "description": "An address for where the user should be able to select entities from, when adding to the list",\n      "attributeType": "string",\n      "optional": true\n    },\n    {\n      "name": "hideInvalidTypes",\n      "type": "CORE:BlueprintAttribute",\n      "description": "When appending to the list, whether or not the user should see invalid types in the entity selector",\n      "attributeType": "boolean",\n      "default": false,\n      "optional": true\n    },\n    {\n      "name": "headers",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Name of primitive child attributes to display in item",\n      "attributeType": "string",\n      "default": ["name", "type"],\n      "dimensions": "*"\n    },\n    {\n      "name": "functionality",\n      "type": "CORE:BlueprintAttribute",\n      "description": "List functionality config",\n      "attributeType": "PLUGINS:dm-core-plugins/list/FunctionalityConfig",\n      "optional": true\n    },\n    {\n      "name": "expandViewConfig",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Which ViewConfig to render when expanding the list item.",\n      "attributeType": "CORE:ViewConfig",\n      "optional": true\n    },\n    {\n      "name": "openViewConfig",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Which ViewConfig to render when open the list item.",\n      "attributeType": "CORE:ViewConfig",\n      "optional": true\n    },\n    {\n      "name": "width",\n      "type": "dmss://system/SIMOS/BlueprintAttribute",\n      "description": "Width of the complete list",\n      "attributeType": "string",\n      "optional": true\n    },\n    {\n      "name": "templates",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Attribute on parent (of same type as list) which should be used as template when instantiating new items. (e.g. \'template\' will use the \'template\' attribute on the parent.)",\n      "attributeType": "PLUGINS:dm-core-plugins/common/Template",\n      "dimensions": "*",\n      "optional": true\n    },\n    {\n      "name": "labelByIndex",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Control whether index should be appended to label when list item is opened.",\n      "attributeType": "boolean",\n      "default": false,\n      "optional": true\n    },\n    {\n      "name": "label",\n      "type": "CORE:BlueprintAttribute",\n      "description": "Override label for all items that are opened in a ViewSelector from List.",\n      "attributeType": "string",\n      "optional": true\n    },\n    {\n      "name": "defaultPaginationRowsPerPage",\n      "type": "CORE:BlueprintAttribute",\n      "description": "The number of rows per page to show by default. If there are less rows in the list than this number, then pagination selector will not be visible. ",\n      "attributeType": "number",\n      "optional": true\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(t.h1,{id:"functionalityconfigjson",children:"FunctionalityConfig.json"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "name": "FunctionalityConfig",\n  "type": "CORE:Blueprint",\n  "attributes": [\n    {\n      "name": "type",\n      "type": "dmss://system/SIMOS/BlueprintAttribute",\n      "attributeType": "string"\n    },\n    {\n      "name": "delete",\n      "type": "CORE:BlueprintAttribute",\n      "attributeType": "boolean",\n      "default": true,\n      "optional": true\n    },\n    {\n      "name": "add",\n      "type": "CORE:BlueprintAttribute",\n      "attributeType": "boolean",\n      "default": true,\n      "optional": true\n    },\n    {\n      "name": "edit",\n      "type": "CORE:BlueprintAttribute",\n      "attributeType": "boolean",\n      "default": true,\n      "optional": true\n    },\n    {\n      "name": "sort",\n      "type": "CORE:BlueprintAttribute",\n      "attributeType": "boolean",\n      "default": true,\n      "optional": true\n    },\n    {\n      "name": "open",\n      "type": "CORE:BlueprintAttribute",\n      "attributeType": "boolean",\n      "default": false,\n      "optional": true\n    },\n    {\n      "name": "expand",\n      "type": "CORE:BlueprintAttribute",\n      "attributeType": "boolean",\n      "default": true,\n      "optional": true\n    }\n  ]\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(96540);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);