"use strict";(self.webpackChunkdevelopment_framework_docs=self.webpackChunkdevelopment_framework_docs||[]).push([[9167],{55398:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=i(74848),s=i(28453);const o={title:"Plugins",sidebar_position:3},r=void 0,l={id:"concepts/plugins",title:"Plugins",description:"You can extend the functionality of the system or your apps by using plugins.",source:"@site/docs/concepts/plugins.md",sourceDirName:"concepts",slug:"/concepts/plugins",permalink:"/dm-docs/docs/concepts/plugins",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Plugins",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Recipes",permalink:"/dm-docs/docs/concepts/recipes"},next:{title:"Data sources and packages",permalink:"/dm-docs/docs/concepts/data-sources"}},c={},d=[{value:"UI Plugins",id:"ui-plugins",level:2},{value:"Repository Plugins",id:"repository-plugins",level:2},{value:"Job Handler Plugins",id:"job-handler-plugins",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"You can extend the functionality of the system or your apps by using plugins."}),"\n",(0,t.jsx)(n.p,{children:"As of now, there are three types of plugins:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"UI plugins"}),"\n",(0,t.jsx)(n.li,{children:"Repository plugins"}),"\n",(0,t.jsx)(n.li,{children:"Job handler plugins"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"ui-plugins",children:"UI Plugins"}),"\n",(0,t.jsx)(n.p,{children:"UI plugins are ReactJS components that implement the IUIPlugin interface, and are used to render entities in a specific way."}),"\n",(0,t.jsxs)(n.p,{children:["You can render an entity, with plugins, by using ",(0,t.jsx)(n.code,{children:"<EntityView idReference={entityId} type={typeOfEntity}/>"}),". ",(0,t.jsx)(n.code,{children:"EntityView"})," is a component exported by the ",(0,t.jsx)(n.code,{children:"@development-framwork/dm-core"})," NPM package."]}),"\n",(0,t.jsx)(n.p,{children:"If the plugin is correctly registered, this component will then automatically select the correct plugin, and render the entity using that plugin."}),"\n",(0,t.jsxs)(n.p,{children:["Read more about writing and registering a UIPlugin ",(0,t.jsx)(n.a,{href:"/docs/guides/plugin-development",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"repository-plugins",children:"Repository Plugins"}),"\n",(0,t.jsxs)(n.p,{children:["Repository plugins are Python modules, used to extends DMSS with the ability to communicate with a specific storage technology.\nThe ",(0,t.jsx)(n.code,{children:"type"}),"-field of a DataSource repository definition (see ",(0,t.jsx)(n.a,{href:"/docs/concepts/data-sources",children:"datasources"}),") is used to determine which RepositoryPlugin should be used when communicating with the storage backend."]}),"\n",(0,t.jsxs)(n.p,{children:["For details on implementing a RepositoryPlugin, see ",(0,t.jsx)(n.a,{href:"https://github.com/equinor/data-modelling-storage-service?tab=readme-ov-file#repository-plugins",children:"here"})]}),"\n",(0,t.jsx)(n.h2,{id:"job-handler-plugins",children:"Job Handler Plugins"}),"\n",(0,t.jsx)(n.p,{children:"Job handler plugins are Python modules added to DM-Job API. They are used to schedule jobs on some specific infrastructure, or can be a job executor itself."}),"\n",(0,t.jsxs)(n.p,{children:["For details on implementing a JobHandlerPlugin, see ",(0,t.jsx)(n.a,{href:"https://github.com/equinor/dm-job?tab=readme-ov-file#job-handler-plugins",children:"here"})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);