"use strict";(self.webpackChunkdevelopment_framework_docs=self.webpackChunkdevelopment_framework_docs||[]).push([[7167],{74395:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var s=i(74848),l=i(28453);const t={sidebar_position:3},o="Plugin development",r={id:"guides/plugin-development",title:"Plugin development",description:"UiPlugins",source:"@site/docs/guides/plugin-development.md",sourceDirName:"guides",slug:"/guides/plugin-development",permalink:"/dm-docs/docs/guides/plugin-development",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Application development",permalink:"/dm-docs/docs/guides/application-development"},next:{title:"Administration",permalink:"/dm-docs/docs/guides/administration/"}},d={},a=[{value:"UiPlugins",id:"uiplugins",level:2},{value:"Creating a UiPlugin",id:"creating-a-uiplugin",level:3},{value:"Using a UiPlugin",id:"using-a-uiplugin",level:3},{value:"Jobs plugins",id:"jobs-plugins",level:2},{value:"DMSS repository plugins",id:"dmss-repository-plugins",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"plugin-development",children:"Plugin development"}),"\n",(0,s.jsx)(n.h2,{id:"uiplugins",children:"UiPlugins"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["This guide assumes that the app is created using ",(0,s.jsx)(n.code,{children:"create-dm-app"}),", and that it follows that folder structure."]})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-uiplugin",children:"Creating a UiPlugin"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["First, create a folder under ",(0,s.jsx)(n.code,{children:"src/plugins/"})," for the new plugin like shown below."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src/\n|_ plugins/\n  |_ new-plugin/\n    |_ index.tsx\n"})}),"\n",(0,s.jsx)(n.p,{children:"Plugins needs to export a list of plugins, like so:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { EPluginType, TPlugin, IUIPlugin } from '@development-framework/dm-core'\n\nconst PluginComponent = (props: IUIPlugin) => {\n  return (\n    <div>\n      Plugin content goes here!\n    </div>\n  )\n}\n\nexport default ({\n  'newPlugin': {\n    component: HelloWorldPlugin,\n  },\n} as TUiPluginMap)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To load the UiPlugin, add it to the map of plugins in ",(0,s.jsx)(n.code,{children:"src/plugins.js"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const plugins: TUiPluginMap = {\n  ...dmCorePlugins,\n  ...newPlugin,\n}\n\nexport default plugins\n\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"using-a-uiplugin",children:"Using a UiPlugin"}),"\n",(0,s.jsx)(n.p,{children:"Before a plugin can be used, it must be associated with a model (blueprint), this is done with RecipeLinks"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a ",(0,s.jsx)(n.code,{children:"RecipeLink"})," entity under the data folder, e.g. ",(0,s.jsx)(n.code,{children:"app/data/DemoDS/DemoApplication/recipes/"}),", like this."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "type": "CORE:RecipeLink",\n  "_blueprintPath_": "/models/<blueprint name>",\n  "initialUiRecipe":     {\n      "type": "CORE:UiRecipe",\n      "name": "My new test plugin",\n      "plugin": "newPlugin"\n    }\n  "uiRecipes": [...otherUiRecipes]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:'NOTE: Replace "<blueprint name>" with the name of the blueprint you want to associate the plugin with.'}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Upload the new recipe by resetting the application"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./reset-app.sh\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["After the ",(0,s.jsx)(n.code,{children:"RecipeLink"})," is added, create a ",(0,s.jsx)(n.em,{children:"lookup"})," with the app name and the ",(0,s.jsx)(n.em,{children:"recipe links"})," for it by running the dm-command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dm create-lookup demo-app DemoDS/instances/recipe_links\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The Data Modeling Storage Service must be running on localhost:5000"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"jobs-plugins",children:"Jobs plugins"}),"\n",(0,s.jsxs)(n.p,{children:["Read about job plugins here: ",(0,s.jsx)(n.a,{href:"https://github.com/equinor/dm-job#job-handler-plugins",children:"DM-Job Plugins"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"dmss-repository-plugins",children:"DMSS repository plugins"}),"\n",(0,s.jsxs)(n.p,{children:["Read about adding support for different storage backends here: ",(0,s.jsx)(n.a,{href:"https://github.com/equinor/data-modelling-storage-service?tab=readme-ov-file#repository-plugins",children:"DMSS Plugins"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(96540);const l={},t=s.createContext(l);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);