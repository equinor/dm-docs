"use strict";(self.webpackChunkdevelopment_framework_docs=self.webpackChunkdevelopment_framework_docs||[]).push([[6177],{379:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=s(74848),a=s(28453);const o={title:"Data sources and packages",sidebar_position:4},c=void 0,r={id:"concepts/data-sources",title:"Data sources and packages",description:"In data modeling storage service (DMSS), documents (blueprints or entities)",source:"@site/docs/concepts/data-sources.md",sourceDirName:"concepts",slug:"/concepts/data-sources",permalink:"/dm-docs/docs/concepts/data-sources",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Data sources and packages",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Plugins",permalink:"/dm-docs/docs/concepts/plugins"},next:{title:"Meta",permalink:"/dm-docs/docs/concepts/meta"}},i={},d=[{value:"DataSource",id:"datasource",level:2},{value:"Packages",id:"packages",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.a,{href:"https://github.com/equinor/data-modelling-storage-service",children:"data modeling storage service"})," (DMSS), documents (blueprints or entities)\nare stored in a ",(0,t.jsx)(n.em,{children:"virtual filesystem"})," which is a hierarchy with DataSources at the top. You can think of DataSources as drives on a Windows filesystem"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["DataSource","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Root package","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"document"}),"\n",(0,t.jsxs)(n.li,{children:["sub package","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["document","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Another datasource"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"datasource",children:"DataSource"}),"\n",(0,t.jsxs)(n.p,{children:["In the topmost layer we have data sources. A data source is an abstraction layer over one or more ",(0,t.jsx)(n.em,{children:"storage repository"}),". A storage repository is a physical storage system (filesystem, SQL-database, NoSQL-Database, cloud object storage, etc.)."]}),"\n",(0,t.jsx)(n.p,{children:"To define a data source, we create a json file for it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "MyDataSource",\n  "repositories": {\n    "db": {\n      "type": "mongo-db",\n      "host": "db",\n      "port": 27017,\n      "username": "***",\n      "password": "***",\n      "tls": true,\n      "database": "MyDatabase",\n      "collection": "MyDatabaseCollection"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Internally in DMSS, a lookup table is created for each document stored. This content keeps the information on which repository the document is stored in, it's global DMSS ID, and access control information."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "lookup_id": "40388758-ee55-46be-bfa6-d3527bc2d12d",\n  "repository": "a",\n  "database_id": "40388758-ee55-46be-bfa6-d3527bc2d12d",\n  "acl": {\n    "owner": "dmss-admin",\n    "roles": {\n      "dmss-admin": "WRITE"\n    },\n    "users": {},\n    "others": "READ"\n  },\n  "storage_affinity": "default",\n  "meta": {\n    "created": "2023-08-31 09:06:31.315147"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Note: As of June 2024, the ",(0,t.jsx)(n.code,{children:"lookup_id"})," and ",(0,t.jsx)(n.code,{children:"database_id"})," are equal, but they don't have to be. DMSS uses the ",(0,t.jsx)(n.code,{children:"lookup_id"}),"\nto find the correct document. Internally in the Mongo database, a different id (",(0,t.jsx)(n.code,{children:"database_id"}),") is used."]}),"\n",(0,t.jsx)(n.p,{children:"Access control for documents is also handled on the data source level.  In the lookup table the acl attribute determines\nwho should have what access to each document."}),"\n",(0,t.jsx)(n.h2,{id:"packages",children:"Packages"}),"\n",(0,t.jsx)(n.p,{children:"A package is very similar to a folder on your computer's local filesystem. It contains one or more documents (entities, blueprints, sub packages, etc)."}),"\n",(0,t.jsxs)(n.p,{children:["A package is either a ",(0,t.jsx)(n.code,{children:"root package"}),", if the package is directly under a data source, or a ",(0,t.jsx)(n.code,{children:"non-root packages"})," if the package exists further down in the hierarchy."]}),"\n",(0,t.jsx)(n.p,{children:"Example of a package entity:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "type": "dmss://system/SIMOS/Package",\n    "name": "apps",\n    "isRoot": false,\n    "content": [\n        {\n            "address": "$2305507e-4dbf-40dd-a1c6-4ee24907a534",\n            "type": "dmss://system/SIMOS/Reference",\n            "referenceType": "storage"\n        },\n        {\n            "address": "$c5b8ceff-2775-413c-9546-541606b6cb42",\n            "type": "dmss://system/SIMOS/Reference",\n            "referenceType": "storage"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The content list of a package entity is always storage uncontained and model contained."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(96540);const a={},o=t.createContext(a);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);