"use strict";(self.webpackChunkdevelopment_framework_docs=self.webpackChunkdevelopment_framework_docs||[]).push([[2837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=i,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},r="Application development",l={unversionedId:"guides/application-development",id:"guides/application-development",title:"Application development",description:"By following these steps, you will have your own data modelling app up and running on your local machine.",source:"@site/docs/guides/application-development.md",sourceDirName:"guides",slug:"/guides/application-development",permalink:"/dm-docs/docs/guides/application-development",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Domain modeling",permalink:"/dm-docs/docs/guides/domain-modeling"},next:{title:"Plugin development",permalink:"/dm-docs/docs/guides/plugin-development"}},p={},s=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Create a new app",id:"create-a-new-app",level:2},{value:"Running the app",id:"running-the-app",level:2},{value:"Reset data",id:"reset-data",level:2},{value:"Build production version",id:"build-production-version",level:2},{value:"Configure the app",id:"configure-the-app",level:2},{value:"Extending the app",id:"extending-the-app",level:2},{value:"Modelling domain",id:"modelling-domain",level:2},{value:"Pre commit",id:"pre-commit",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"application-development"},"Application development"),(0,i.kt)("p",null,"By following these steps, you will have your own data modelling app up and running on your local machine."),(0,i.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Node (> 16+)"),(0,i.kt)("li",{parentName:"ul"},"Docker (> 20+)"),(0,i.kt)("li",{parentName:"ul"},"Docker-compose (> 2.11+)"),(0,i.kt)("li",{parentName:"ul"},"Python (> 3.8)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/equinor/dm-cli"},"dm-cli"))),(0,i.kt)("h2",{id:"create-a-new-app"},"Create a new app"),(0,i.kt)("p",null,"To initialize an app, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"create-dm-app")," tool. "),(0,i.kt)("p",null,"Create an app by running (change ",(0,i.kt)("inlineCode",{parentName:"p"},"my-app")," to your application name):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx @development-framework/create-dm-app my-app\n")),(0,i.kt)("p",null,"This will create a new folder ",(0,i.kt)("inlineCode",{parentName:"p"},"my-app")," and inside that folder, the initial application structure is generated and the transitive dependencies are installed. "),(0,i.kt)("p",null,"The application is made in React and you can connect it with any Data Modelling Storage Service (DMSS) instance you want. "),(0,i.kt)("h2",{id:"running-the-app"},"Running the app"),(0,i.kt)("p",null,"To run dependent services locally you can use the included ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file. This file includes databases, DMSS service, and job service. "),(0,i.kt)("p",null,"Start services in the background (-d detached mode) by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose pull\ndocker compose up\n")),(0,i.kt)("p",null,"To start the app development server, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n")),(0,i.kt)("p",null,"The web app can now be reached at ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000")," in the web browser. The web page will automatically reload if you make changes to the code.\nYou will see the build errors and lint warnings in the console."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Remember: You must have the docker-compose services running to use the web application.")),(0,i.kt)("h2",{id:"reset-data"},"Reset data"),(0,i.kt)("p",null,"Install the dm-cli package (available on ",(0,i.kt)("a",{parentName:"p",href:"https://pypi.org/project/dm-cli/"},"PyPi"),") by running: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r requirements.txt \n")),(0,i.kt)("p",null,"Run this command to reset the application data (upload any entities, blueprints, and recipes registered under the ",(0,i.kt)("inlineCode",{parentName:"p"},"app/")," folder) to the data modelling storage service (DMSS):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./reset-app.sh\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This script must be run every time a modification is done in any files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"app/"),"  folder.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Tip: Use virtual Python environment"),(0,i.kt)("p",null,"We recommend create a virtual Python environment."),(0,i.kt)("p",null,"Create a new virtual environment by running: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 -m venv .venv\n")),(0,i.kt)("p",null,"Activate the virtual environment by running:"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Linux"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ source .venv/bin/activate\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Windows"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ .\\venv\\Scripts\\Activate.ps1\n$ pip install --upgrade pip\n")))),(0,i.kt)("h2",{id:"build-production-version"},"Build production version"),(0,i.kt)("p",null,"When you\u2019re ready to deploy to production, create a minified bundle by running the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build\n")),(0,i.kt)("h2",{id:"configure-the-app"},"Configure the app"),(0,i.kt)("p",null,"This template uses an application entity to control the behavior of the app. This entity can be seen at ",(0,i.kt)("inlineCode",{parentName:"p"},"app/data/DemoApplicationDataSource/instances/demoApplication.json"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},".env"),"-file has a variable pointing to this application entity, which will be loaded and used to select what ",(0,i.kt)("em",{parentName:"p"},"UIPlugin")," to be shown. The application ",(0,i.kt)("em",{parentName:"p"},"RecipeLink")," that defines what to show is located at ",(0,i.kt)("inlineCode",{parentName:"p"},"app/data/DemoApplicationDataSource/DemoApplication/recipes/demoApp.json"),". "),(0,i.kt)("p",null,"URLs to services are controlled by environment variables in the ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file, by default this will point to the services specified in the ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file. The ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file also controls authentication, and it is possible to enable or disable authentication. See ",(0,i.kt)("a",{parentName:"p",href:"https://equinor.github.io/dm-docs/docs/guides/administration/configuration"},"configuration")," for overview of the different configuration options available."),(0,i.kt)("h2",{id:"extending-the-app"},"Extending the app"),(0,i.kt)("p",null,"Add functionality and customize your apps using plugins. Apps is designed to be extensible, and one of the best ways to add functionality to apps is through the plugin system."),(0,i.kt)("p",null,"Add functionality and customize your apps using ",(0,i.kt)("a",{parentName:"p",href:"/dm-docs/docs/concepts/plugins"},"plugins")," and ",(0,i.kt)("a",{parentName:"p",href:"/dm-docs/docs/concepts/recipes"},"recipes"),"."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/dm-docs/docs/guides/plugin-development"},"plugin development")," for creating and adding new plugins."),(0,i.kt)("h2",{id:"modelling-domain"},"Modelling domain"),(0,i.kt)("p",null,"Add models using ",(0,i.kt)("a",{parentName:"p",href:"/dm-docs/docs/concepts/blueprints"},"blueprints"),"."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/dm-docs/docs/guides/domain-modeling"},"domain modeling")," for how to create and add models for the app."),(0,i.kt)("h2",{id:"pre-commit"},"Pre commit"),(0,i.kt)("p",null,"To ensure consistent code formatting and to do a minimum of checks on the local computer before committing code to a Git repository, the app provides a ",(0,i.kt)("inlineCode",{parentName:"p"},".pre-commit-config.yaml")," file that is used to setup Git ",(0,i.kt)("em",{parentName:"p"},"pre-commit hooks"),".\nThe pre-commit hook will run ",(0,i.kt)("a",{parentName:"p",href:"https://prettier.io/"},"prettier")," formatting, certain tests, sanitisers and analyze the JavaScript code using ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/"},"eslint"),".\nTo run pre-commit, it needs to be installed on your local machine with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install pre-commit\n")),(0,i.kt)("p",null,"This tell pre-commit to always run for this repository on every commit."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Pre-commit will run on every commit, but can also be run manually on all files:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pre-commit run --all-files\n")),(0,i.kt)("p",{parentName:"admonition"},"Or be skipped:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git commit --no-verify \n"))))}c.isMDXComponent=!0}}]);